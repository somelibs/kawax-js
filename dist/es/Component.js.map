{"version":3,"file":"Component.js","names":["_lodash","_interopRequireDefault","require","_react","_reactDom","_propTypes","_warning","_redux","_reactRedux","_classnames","_aphrodite","_Context","_Runtime3","_ActionStack","_resolve","_select","_excluded","_excluded2","e","__esModule","_objectWithoutProperties","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","_regeneratorRuntime","prototype","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","ownKeys","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","bind","_inherits","_setPrototypeOf","_toPrimitive","toPrimitive","String","Number","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","Component","Pure","isReactComponent","warning","persistActionStack","instanceKeys","composedProps","updateComposedProps","props","_","uniq","concat","getPureProps","omitBy","includes","getForwardProps","ownProps","propTypes","componentInstance","prevProps","prevContext","aggregateStaticWithMixins","compact","map","mixins","mixin","isObject","resolveStaticWithMixins","options","undefined","resolved","staticMap","each","mixinResult","assign","bindMixin","isFunction","isUndefined","getMixins","actionStack","getActionStack","instanceKey","ActionStack","clearActionStack","_clearActionStack","_callee3","store","_args3","_callee3$","_context3","Runtime","pickBy","_ref4","_callee2","instance","_callee2$","_context2","abort","_dispatch","payload","_x","_x2","contextWrapper","component","_Wrapper","_React$Component","Wrapper","_this","_len","args","_key","uniqueId","componentDidMount","render","contextToProps","isEmpty","propsToContext","React","createElement","Consumer","context","contextProps","defaultClassName","className","previousClassName","uniqClassName","mapSelectors","selectors","applyWildcard","specialChars","mappedSelectors","selector","native","newKey","isPlainObject","mapNestedStyle","stylesheet","item","selectorKey","_definition","getCssClasses","state","css","componentStyle","StyleSheet","styleWithNesting","omitProps","omitted","omit","getSelect","helper","_len2","_key2","SelectHelper","PureReflection","_React$Component2","_this2","_len3","_key3","initialized","currentClassNames","current","split","currentClass","reject","computedClass","fullProps","classNames","mapCssClasses","cssClasses","fiber","get","sibling","node","ReactDOM","findDOMNode","stateNode","parent","parentNode","getClassNames","_componentWillUnmount","_callee","_callee$","_context","componentWillUnmount","computeContext","_Runtime","getState","select","renderComponent","ownClassNames","ref","reference","Provider","getDerivedStateFromProps","defaultProps","PropTypes","shape","func","isRequired","subscribe","history","listen","location","object","bindedActionCreators","createActions","actionConstructors","_ref","mapValues","actionConstructor","_Runtime2","dispatch","origin","tracked","id","run","actions","bindActionCreators","_ref2","nextProps","actionCreators","actionsMap","wrapStateToProps","_ref3","stateProps","ownActions","own","wrapDispatchToProps","dispatchToProps","plainActions","mergeConnectProps","getConnectOptions","connectOptions","mapStateToProps","mapDispatchToProps","mergeProps","strictCompare","shallowCompare","isEqual","reduxConnect","connect","areStatesEqual","areStatePropsEqual","areMergedPropsEqual","compose"],"sources":["../../src/Component.js"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { StyleSheet, css } from './helpers/aphrodite';\nimport Context from './instance/Context';\nimport Runtime from './instance/Runtime';\nimport ActionStack from './internal/ActionStack';\nimport resolve from './helpers/resolve';\nimport SelectHelper from './helpers/select';\n\nexport default function Component(Pure) {\n\n  if (!Pure.prototype.isReactComponent) warning(Pure, 'should be a class based React Component');\n\n  const persistActionStack = Pure.persistActionStack || false;\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                          Instance                                            *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  const instanceKeys = [];\n\n  let composedProps = [\n    'instanceKey',\n    'select',\n    'actions',\n    'dispatch',\n    'children',\n    'ownActions',\n    'ownClassNames',\n  ];\n\n  function updateComposedProps(props) {\n    composedProps = _.uniq([...composedProps, ..._.keys(props)]);\n    return composedProps;\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                         Pure props                                           *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  Pure.prototype.getPureProps = function getPureProps() {\n    return _.omitBy(this.props, (value, key) => _.includes(composedProps, key));\n  };\n\n  Pure.prototype.getForwardProps = function getForwardProps() {\n    /* eslint-disable-next-line react/forbid-foreign-prop-types */\n    const ownProps = _.keys(Pure.propTypes);\n    return _.omitBy(\n      this.props, (value, key) => (_.includes(ownProps, key) || _.includes(composedProps, key)),\n    );\n  };\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                        Display Name                                          *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  const displayName = Pure.name || 'Functionnal';\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                  Props, Context & Instance                                   *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  let componentInstance;\n  /* eslint-disable-next-line no-unused-vars */\n  let prevProps = {};\n  let prevContext = {};\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                            Mixins                                            *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  function aggregateStaticWithMixins(key) {\n    return _.compact([\n      Pure[key] || {},\n      ..._.map(Pure.mixins, (mixin) => _.isObject(mixin.props) && mixin.props[key]),\n    ]);\n  }\n\n  function resolveStaticWithMixins(key, options = {}) {\n    const resolved = {};\n    const staticMap = aggregateStaticWithMixins(key);\n    _.each(staticMap, (mixin) => {\n      const mixinResult = resolve.call(componentInstance, mixin, options);\n      Object.assign(resolved, mixinResult);\n    });\n    return resolved;\n  }\n\n  function bindMixin(mixin) {\n    if (_.isFunction(mixin)) return mixin.bind(componentInstance);\n    if (_.isObject(mixin) && !_.isUndefined(mixin.call)) {\n      return (...args) => {\n        _.assign(mixin, componentInstance);\n        return mixin.call(...args);\n      };\n    }\n    return mixin;\n  }\n\n  function getMixins() {\n    const mixins = {};\n    if (Pure.mixins) {\n      _.each(Pure.mixins, (mixin, key) => {\n        mixins[key] = bindMixin(mixin);\n      });\n    }\n    return mixins;\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                        Action Stack                                          *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  /* eslint-disable-next-line no-mixed-operators */\n  let actionStack = {};\n\n  function getActionStack(instanceKey) {\n    const key = (persistActionStack === true) ? '__persistent__' : instanceKey;\n    actionStack[key] = actionStack[key] || new ActionStack();\n    return actionStack[key];\n  }\n\n  async function clearActionStack(keys = actionStack.keys) {\n    const store = Runtime('store');\n    actionStack = _.pickBy(actionStack, async (instance, key) => {\n      if (_.includes(keys, key)) {\n        await instance.abort();\n        store._dispatch({ type: '@@CLEAR_ACTION', payload: key });\n      } else {\n        return true;\n      }\n    });\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                           Wrapper                                            *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  /* eslint-disable-next-line react/no-multi-comp */\n  const contextWrapper = (component) => class Wrapper extends React.Component {\n\n    static displayName = `Wrapper(${displayName})`;\n\n    instanceKey = `${displayName}Component${_.uniqueId()}`;\n\n    componentDidMount() {\n      instanceKeys.push(this.instanceKey);\n    }\n\n    render() {\n      const ownProps = this.props;\n      const { instanceKey } = this;\n      const contextToProps = aggregateStaticWithMixins('contextToProps');\n      if (!_.isEmpty(contextToProps) || Pure.propsToContext) {\n        return React.createElement(Context.Consumer, null, (context) => {\n          prevContext = context;\n          const contextProps = resolveStaticWithMixins('contextToProps', { context, ownProps });\n          updateComposedProps(contextProps);\n          if (!_.isEmpty(contextProps)) {\n            return React.createElement(component, { ...contextProps, ...ownProps, instanceKey });\n          }\n          return React.createElement(component, { ...ownProps, instanceKey });\n        });\n      }\n      return React.createElement(component, { ...ownProps, instanceKey });\n    }\n\n  };\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                     CSS Helpers Vars                                         *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  const defaultClassName = Pure.className || false;\n  let previousClassName = false;\n  let uniqClassName = false;\n\n  function mapSelectors(selectors, applyWildcard = false) {\n    const specialChars = ['*', '&', ':', '@'];\n    const mappedSelectors = {};\n    _.each(selectors, (selector, key) => {\n      const native = !!_.includes(specialChars, key[0]);\n      const newKey = !native ? `&${key}` : key;\n      if (_.isPlainObject(selector) && !native) {\n        mappedSelectors[newKey] = mapSelectors(selector);\n      } else {\n        mappedSelectors[key] = selector;\n      }\n    });\n    return mappedSelectors;\n  }\n\n  function mapNestedStyle(stylesheet) {\n    _.each(stylesheet, (item, selectorKey) => {\n      const selectors = item._definition;\n      stylesheet[selectorKey]._definition = mapSelectors(selectors, true);\n    });\n    return stylesheet;\n  }\n\n  function getCssClasses(props, state) {\n    if (_.isFunction(Pure.css) || uniqClassName === false) {\n      const componentStyle = resolve(Pure.css, props, state);\n      if (componentStyle) {\n        const className = Pure.name || 'Component';\n        const stylesheet = StyleSheet.create({ [className]: componentStyle });\n        const styleWithNesting = mapNestedStyle(stylesheet);\n        if (uniqClassName) previousClassName = uniqClassName;\n        uniqClassName = css(styleWithNesting[className]);\n        return [defaultClassName, uniqClassName];\n      }\n      return [defaultClassName];\n    }\n    return [defaultClassName, uniqClassName];\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                          Helpers                                             *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  function omitProps(props) {\n    const omitted = Pure.omitProps || ['staticContext'];\n    return _.omit(props, omitted);\n  }\n\n  function getSelect(state) {\n    return function helper(...args) {\n      return SelectHelper(state, ...args);\n    };\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                      Component Wrapper                                       *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  /* eslint-disable-next-line react/no-multi-comp */\n  class PureReflection extends React.Component {\n\n    state = {\n      initialized: false,\n    };\n\n    static displayName = `Component(${displayName})`;\n\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    static propTypes = Pure.propTypes;\n\n    static defaultProps = Pure.defaultProps;\n\n    static contextTypes = {\n      store: PropTypes.shape({\n        getState: PropTypes.func.isRequired,\n        subscribe: PropTypes.func.isRequired,\n      }),\n      history: PropTypes.shape({\n        listen: PropTypes.func.isRequired,\n        location: PropTypes.object.isRequired,\n        push: PropTypes.func.isRequired,\n      }),\n    };\n\n    static getDerivedStateFromProps(props, state) {\n      prevProps = props;\n      return state;\n    }\n\n    getClassNames = (currentClassNames) => { /* eslint-disable react/prop-types */\n      const current = currentClassNames ? currentClassNames.split(' ') : false;\n      const currentClass = current ? _.reject(current, (i) => (i === previousClassName)) : false;\n      const computedClass = getCssClasses(this.fullProps, this.state) || false;\n      const uniq = _.uniq([...currentClass, ...computedClass]);\n      return classNames(_.compact(uniq));\n    };\n\n    mapCssClasses() { /* eslint-disable react/no-find-dom-node */\n      if (Pure.className || Pure.css) {\n        const { className } = this.fullProps;\n        const cssClasses = getCssClasses(this.fullProps, this.state);\n        const fiber = _.get(componentInstance, '_reactInternalFiber');\n        const sibling = _.get(fiber, 'child.sibling');\n        const node = ReactDOM.findDOMNode(fiber.stateNode);\n        if (node && (className || cssClasses)) {\n          if (sibling) {\n            const parent = node ? node.parentNode : false;\n            if (parent) {\n              this.classNames = this.getClassNames(parent.className);\n              parent.className = this.classNames;\n            }\n          } else {\n            this.classNames = this.getClassNames(node.className);\n            node.className = this.classNames;\n          }\n        }\n      }\n    }\n\n    componentDidUpdate = () => {\n      this.mapCssClasses();\n    };\n\n    componentDidMount = () => {\n      this.mapCssClasses();\n    };\n\n    async componentWillUnmount() {\n      if (!persistActionStack === true) {\n        const { instanceKey } = this.props;\n        await clearActionStack([instanceKey]);\n      }\n    }\n\n    computeContext(ownProps) {\n      const { getState } = Runtime('store');\n      const state = getState();\n      const select = getSelect(state);\n      const mixins = getMixins();\n      return resolveStaticWithMixins('propsToContext', { ownProps, mixins, select });\n    }\n\n    renderComponent(ownProps = {}) {\n      const ownClassNames = this.classNames || String();\n      this.fullProps = { ...ownProps, ...this.props, ownClassNames };\n      return React.createElement(Pure, {\n        ...this.fullProps,\n        ref: (reference) => {\n          componentInstance = reference || componentInstance;\n        },\n      });\n    }\n\n    render() {\n      const ownProps = omitProps(this.props);\n      if (Pure.propsToContext) {\n        const propsToContext = this.computeContext(ownProps);\n        if (propsToContext) {\n          updateComposedProps({ ...prevContext, ...propsToContext });\n          return (\n            <Context.Provider value={{ ...prevContext, ...propsToContext }}>\n              {this.renderComponent(ownProps)}\n            </Context.Provider>\n          );\n        }\n      }\n      return this.renderComponent(ownProps);\n    }\n\n  }\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                           Redux                                              *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  let bindedActionCreators = {};\n\n  function createActions(actionConstructors, { instanceKey, ...props }) {\n    return _.mapValues(actionConstructors, (actionConstructor, key) => {\n      if (_.isFunction(actionConstructor)) {\n        return (...data) => {\n          const { getState, dispatch } = Runtime('store');\n          const instance = actionConstructor({\n            origin: instanceKey,\n            tracked: true,\n            props: props,\n          });\n          const id = instance.run(...data)(dispatch, getState);\n          const actions = getActionStack(instanceKey);\n          actions.push({ id, key, instance });\n          return id;\n        };\n      }\n    });\n  }\n\n  function bindActionCreators({ state, actions, nextProps, select }) {\n    const actionCreators = Pure.actionCreators || {};\n    const actionConstructors = resolve(actionCreators, { nextProps }) || {};\n    const actionsMap = createActions(actionConstructors, nextProps);\n    updateComposedProps(actionsMap);\n    return actionsMap;\n  }\n\n  function wrapStateToProps() {\n    return (state, { instanceKey, ...props }) => {\n      const select = getSelect(state);\n      const ownProps = omitProps(props);\n      const mixins = getMixins();\n      const actions = getActionStack(instanceKey);\n      const stateProps = resolveStaticWithMixins('stateToProps', { state, actions, ownProps, mixins, select });\n      updateComposedProps(stateProps);\n      const ownActions = _.isEmpty(actions) ? {} : actions.own();\n      const nextProps = { ...ownProps, ...stateProps, actions, instanceKey, ownActions };\n      bindedActionCreators = bindActionCreators({ state, actions, nextProps, select });\n      return { actions, instanceKey, ownActions, ...stateProps };\n    };\n  }\n\n  function wrapDispatchToProps() {\n    const dispatchToProps = Pure.dispatchToProps || {};\n    if (_.isFunction(dispatchToProps)) {\n      return (dispatch, ownProps) => {\n        const actionCreators = bindedActionCreators;\n        const plainActions = resolve(dispatchToProps, { dispatch, ownProps, actionCreators }) || {};\n        const actions = { ...actionCreators, ...plainActions };\n        updateComposedProps(actions);\n        return actions;\n      };\n    }\n    return (dispatch) => {\n      const actions = { ...bindedActionCreators, ...dispatchToProps };\n      updateComposedProps(actions);\n      return actions;\n    };\n  }\n\n  function mergeConnectProps() {\n    return Pure.mergeConnectProps || null;\n  }\n\n  function getConnectOptions() {\n    return Pure.connectOptions || {};\n  }\n\n  const mapStateToProps = wrapStateToProps();\n  const mapDispatchToProps = wrapDispatchToProps();\n  const mergeProps = mergeConnectProps();\n  const options = getConnectOptions();\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                      Compose and Render                                      *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  const strictCompare = (next, prev) => (prev === next);\n\n  const shallowCompare = (next, prev) => _.isEqual(next, prev);\n\n  const reduxConnect = connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n    areStatesEqual: (next, prev) => strictCompare(next, prev),\n    areStatePropsEqual: (next, prev) => shallowCompare(next, prev),\n    areMergedPropsEqual: (next, prev) => shallowCompare(next, prev),\n    ...options,\n  });\n\n  const component = compose(contextWrapper, reduxConnect)(PureReflection);\n\n  /* -------------------------------------------------------------------------------------------- *\\\n  |*                                       Static helpers                                         *|\n  \\* -------------------------------------------------------------------------------------------- */\n\n  component.clearActionStack = () => {\n    clearActionStack();\n  };\n\n  return component;\n}\n"],"mappings":"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","ignoreList":[]}