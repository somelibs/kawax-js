{"version":3,"file":"Reducer.js","names":["_lodash","_interopRequireDefault","require","_Smart2","_resolve","_excluded","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","name","Array","from","test","isArray","length","n","_objectWithoutProperties","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","indexOf","propertyIsEnumerable","hasOwnProperty","_classCallCheck","_defineProperties","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","value","_setPrototypeOf","_defineProperty","_toPrimitive","toPrimitive","String","Number","ReducerDelegate","instance","_reduce","state","action","ForceAssignment","callback","current","path","Reducer","_Smart","_this","_len","arguments","args","_key","concat","pointer","_matchWithStatus","map","onPending","match","onSuccess","onError","onDone","next","shallow","_ref","payload","_ref2","_","predicate","_forceAssign","remove","unionKey","prev","_parseArray","depth","undefined","statuses","each","status","matchSuccess","matchError","matchPending","helper","_ref3","_ref3$depth","isEmpty","_getInitialState","cloneDeep","baseState","_embeddedReducer","resolvedState","resolve","_this2","type","regex","RegExp","props","applyEmbeddedReducer","reducer","reducerCallback","bundledState","_shouldDelegate","initialState","get","shouldDelegate","isEqual","_parseState","_delegateState","_assignNext","isPlainObject","_parsePlainObject","isFunction","reducedState","_this3","nextItem","currentPath","currentItem","isObject","nextDepth","clone","_this4","union","nextItems","nextKey","matchKey","compact","assign","_this5","includes","delegate","options","Smart","_default","exports"],"sources":["../../src/Reducer.js"],"sourcesContent":["import _ from 'lodash';\nimport Smart from './Smart';\nimport resolve from './helpers/resolve';\n\nfunction ReducerDelegate(instance) {\n  this._reduce = (state, action) => instance.call(state, action);\n}\n\nfunction ForceAssignment(callback) {\n  this._reduce = (current, path) => callback(current, path);\n}\n\nclass Reducer extends Smart {\n\n  static delegate(options) {\n    const instance = new this(options);\n    return new ReducerDelegate(instance);\n  }\n\n  static initialState = null;\n\n  static applyEmbeddedReducer = true;\n\n  unionKey = 'id';\n\n  onPending = (pointer) => (state, action) => this._matchWithStatus(['pending'], pointer)(state, action);\n\n  onSuccess = (pointer) => (state, action) => this._matchWithStatus(['success'], pointer)(state, action);\n\n  onError = (pointer) => (state, action) => this._matchWithStatus(['error'], pointer)(state, action);\n\n  onDone = (pointer) => (state, action) => this._matchWithStatus(['success', 'error'], pointer)(state, action);\n\n  matchPending = (map) => this.onPending(this.match(map));\n\n  matchSuccess = (map) => this.onSuccess(this.match(map));\n\n  matchError = (map) => this.onError(this.match(map));\n\n  matchDone = (map) => this.onDone(this.match(map));\n\n  replace = (next) => this.shallow(next, -1);\n\n  assign = (state, { payload }) => payload;\n\n  assignItem = (state, { payload }) => (_.isArray(state) ? [payload] : payload);\n\n  removeItem = (predicate) => this._forceAssign((current) => {\n    _.remove(current, predicate);\n    return current;\n  });\n\n  mergeBy = (unionKey, next) => (prev, action) => this._forceAssign(\n    (current, path) => this._parseArray(prev, next, action, path, -1, unionKey),\n  );\n\n  shallow = (next, depth = 1) => this._forceAssign(\n    (current, action, path) => {\n      if (!path) {\n        return this._reduce(current, next, action, path, depth);\n      }\n      return next;\n    },\n  );\n\n  call(state, { depth = 0, ...action }) {\n    const path = [];\n    const current = _.isEmpty(state) ? this._getInitialState(path) : _.cloneDeep(state);\n    action.depth = depth + 1;\n    const baseState = this._embeddedReducer(current, action) || current;\n    const resolvedState = resolve.call(this, this.state, baseState, action);\n    const next = (resolvedState === undefined) ? current : resolvedState;\n    return this._reduce(current, next, action, path);\n  }\n\n  matchOn = (statuses) => (state, action) => {\n    let next = state;\n    _.each(statuses, (map, status) => {\n      // eslint-disable-next-line default-case\n      switch (status) {\n        case 'success':\n          next = this.matchSuccess(map)(next, action);\n          break;\n        case 'error':\n          next = this.matchError(map)(next, action);\n          break;\n        case 'pending':\n          next = this.matchPending(map)(next, action);\n          break;\n      }\n    });\n    return next;\n  };\n\n  match(map) {\n    return (state, action) => {\n      let next = state;\n      const { type } = action;\n      _.each(map, (pointer, match) => {\n        const regex = new RegExp(`(^[^.]?|[.])${match}`, 'g');\n        if (type && type.match(regex)) {\n          const resolvedState = resolve.call(this, pointer, state, action);\n          next = this._reduce(next, resolvedState, action);\n        }\n      });\n      return next;\n    };\n  }\n\n  _embeddedReducer(state, action) {\n    if (this.props.applyEmbeddedReducer && action.reducer && action.depth === 1) {\n      const reducerCallback = resolve.call(this, action.reducer, action) || {};\n      const bundledState = resolve.call(this, reducerCallback, this) || {};\n      return this._reduce(state, bundledState, action);\n    }\n  }\n\n  _forceAssign = (helper) => new ForceAssignment(helper);\n\n  _shouldDelegate(next, path) {\n    const initialState = _.get(this.constructor.initialState, path);\n    if (initialState && initialState instanceof ReducerDelegate) {\n      return true;\n    } if (next && next instanceof ReducerDelegate) {\n      return true;\n    }\n    return false;\n  }\n\n  _reduce(current, next, action, path = false, depth = -1) {\n    let state;\n    const shouldDelegate = this._shouldDelegate(next, path);\n    if (!_.isEqual(current, next) && !shouldDelegate) {\n      state = this._parseState(current, next, action, path, depth);\n    } else if (shouldDelegate === true) {\n      state = this._delegateState(current, next, action, path);\n    }\n    return state === undefined ? this._assignNext(current, next) : state;\n  }\n\n  _delegateState(current, next, action, path) {\n    if (next && next instanceof ReducerDelegate) {\n      return next._reduce(current, action);\n    } if (next === null) {\n      const initialState = _.get(this.constructor.initialState, path);\n      return initialState._reduce(next, action);\n    }\n  }\n\n  _parseState(current, next, action, path, depth = -1) {\n    if (_.isPlainObject(next)) {\n      return this._parsePlainObject(current, next, action, path, depth);\n    } if (_.isArray(next) && !path) {\n      return this._parseArray(current, next, action, path, depth);\n    } if (_.isFunction(next)) {\n      const resolvedState = resolve.call(this, next, current, action);\n      const reducedState = this._reduce(current, resolvedState, action, path);\n      return this._assignNext(current, reducedState);\n    } if (next === null && path) {\n      return this._getInitialState(path);\n    } if (next && next instanceof ForceAssignment) {\n      return next._reduce(current, path);\n    }\n  }\n\n  _parsePlainObject(current, next, action, path, depth = -1) {\n    const state = {};\n    _.each(next, (nextItem, key) => {\n      const currentPath = path ? _.concat(path, key) : false;\n      const currentItem = _.isObject(current) ? current[key] : null;\n      const nextDepth = (depth < 0 || depth > 1) ? _.clone(depth) - 1 : false;\n      state[key] = nextDepth && nextItem ? this._reduce(\n        currentItem, nextItem, action, currentPath, nextDepth,\n      ) : nextItem;\n    });\n    return this._assignNext(current, state);\n  }\n\n  _parseArray(current, next, action, path, depth = -1, unionKey = this.unionKey) {\n    const union = [];\n    const nextItems = [...next];\n    _.each(current, (currentItem, key) => {\n      const currentPath = path ? _.concat(path, key) : false;\n      const nextDepth = (depth < 0 || depth > 1) ? _.clone(depth) - 1 : false;\n      if (currentItem) {\n        union[key] = currentItem;\n        _.each(nextItems, (nextItem, nextKey) => {\n          const matchKey = (nextItem && nextItem[unionKey]) ? nextItem[unionKey] : false;\n          if (matchKey && currentItem[unionKey] === matchKey) {\n            union[key] = nextDepth ? this._reduce(\n              currentItem, nextItem, action, currentPath, nextDepth,\n            ) : nextItem;\n            nextItems[nextKey] = null;\n          }\n        });\n      }\n    });\n    return _.compact([...union, ...nextItems]);\n  }\n\n  _assignNext(current, next) {\n    if (_.isPlainObject(current) && _.isPlainObject(next)) {\n      return Object.assign({}, current, next);\n    }\n    return (next === undefined ? current : next);\n  }\n\n  _getInitialState(path) {\n    const { initialState } = this.constructor;\n    const state = initialState\n      ? this._reduce({}, this.constructor.initialState, { type: '@@kawax/INIT' }, [])\n      : null;\n    return _.isEmpty(path) ? state : _.get(state, path);\n  }\n\n  _matchWithStatus(statuses, callback) {\n    return (state, action) => (\n      _.includes(statuses, action.status)\n        ? resolve.call(this, callback, state, action)\n        : state\n    );\n  }\n\n}\n\nexport default Reducer;\n"],"mappings":"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","ignoreList":[]}